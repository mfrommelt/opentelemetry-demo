# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

# extra settings to be merged into OpenTelemetry Collector configuration
# do not delete this file

## Example configuration for sending data to your own OTLP HTTP backend
## Note: the spanmetrics exporter must be included in the exporters array
## if overriding the traces pipeline.
##
#  exporters:
#    otlphttp/example:
#      endpoint: <your-endpoint-url>
#
#  service:
#    pipelines:
#      traces:
#        exporters: [spanmetrics, otlphttp/example]

# exporters:
#   otlp/coralogix:
#     endpoint: ingress.cx498.coralogix.com:443
#     headers:
#       Authorization: Bearer cxtp_gYMbBViUyNYj0RGQppclpByjVVLSve
#       CX-Application-Name: "otel-demo-app"
#       CX-Subsystem-Name: "otel-collector"

# service:
#   pipelines:
#     traces:
#       exporters: [otlp, debug, spanmetrics, otlp/coralogix]

#     metrics:
#       exporters: [otlphttp/prometheus, debug, otlp/coralogix]

#     logs:
#       exporters: [opensearch, debug, otlp/coralogix]

exporters:
  coralogix:
    # The Coralogix traces ingress endpoint
    traces:
      endpoint: "otel-traces.${CORALOGIX_DOMAIN}:443"
    metrics:
      endpoint: "otel-metrics.${CORALOGIX_DOMAIN}:443"
    logs:
      endpoint: "otel-logs.${CORALOGIX_DOMAIN}:443"

    # Your Coralogix private key is sensitive
    private_key: "${CORALOGIX_PRIVATE_KEY}"

    # AppNameSubSystem values.
    # The first non-empty resource attribute is used.
    # application_name_attributes:
    #   - "service.namespace"
    #   - "k8s.namespace.name"
    # subsystem_name_attributes:
    #   - "service.name"
    #   - "k8s.deployment.name"
    #   - "k8s.statefulset.name"
    #   - "k8s.daemonset.name"
    #   - "k8s.cronjob.name"
    #   - "k8s.job.name"
    #   - "k8s.container.name"
    # It is required that logs, metrics and traces emitted by this exporter
    # are tagged in Coralogix
    # with the default application and subsystem constants.
    # Traces, Metrics and Logs emitted by this OpenTelemetry exporter
    # are tagged in Coralogix with the default application and subsystem constants.
    application_name: "${CORALOGIX_APP_NAME}"
    subsystem_name: "${CORALOGIX_SUBSYS_NAME}"

    # (Optional) Timeout is the timeout for every attempt to send data to the backend.
    timeout: 30s

processors:
  batch/traces:
    timeout: 1s
    send_batch_size: 50
  batch/metrics:
    timeout: 60s
  resourcedetection:
    detectors: [env, docker]
    timeout: 5s
    override: true

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [transform, batch/traces, batch]
      exporters: [otlp, debug, spanmetrics, coralogix]
    metrics:
      receivers: [hostmetrics, docker_stats, httpcheck/frontendproxy, otlp, prometheus, redis, spanmetrics]
      processors: [resourcedetection, batch/metrics, batch]
      exporters: [otlphttp/prometheus, debug, coralogix]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [opensearch, debug, coralogix]